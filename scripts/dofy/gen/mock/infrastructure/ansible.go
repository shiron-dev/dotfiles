// Code generated by MockGen. DO NOT EDIT.
// Source: internal/infrastructure/ansible.go
//
// Generated by this command:
//
//	mockgen -source=internal/infrastructure/ansible.go -destination=./gen/mock/infrastructure/ansible.go
//

// Package mock_infrastructure is a generated GoMock package.
package mock_infrastructure

import (
	io "io"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockAnsibleInfrastructure is a mock of AnsibleInfrastructure interface.
type MockAnsibleInfrastructure struct {
	ctrl     *gomock.Controller
	recorder *MockAnsibleInfrastructureMockRecorder
	isgomock struct{}
}

// MockAnsibleInfrastructureMockRecorder is the mock recorder for MockAnsibleInfrastructure.
type MockAnsibleInfrastructureMockRecorder struct {
	mock *MockAnsibleInfrastructure
}

// NewMockAnsibleInfrastructure creates a new mock instance.
func NewMockAnsibleInfrastructure(ctrl *gomock.Controller) *MockAnsibleInfrastructure {
	mock := &MockAnsibleInfrastructure{ctrl: ctrl}
	mock.recorder = &MockAnsibleInfrastructureMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAnsibleInfrastructure) EXPECT() *MockAnsibleInfrastructureMockRecorder {
	return m.recorder
}

// CheckPlaybook mocks base method.
func (m *MockAnsibleInfrastructure) CheckPlaybook(invPath, playbookPath string, sout, serror io.Writer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckPlaybook", invPath, playbookPath, sout, serror)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckPlaybook indicates an expected call of CheckPlaybook.
func (mr *MockAnsibleInfrastructureMockRecorder) CheckPlaybook(invPath, playbookPath, sout, serror any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckPlaybook", reflect.TypeOf((*MockAnsibleInfrastructure)(nil).CheckPlaybook), invPath, playbookPath, sout, serror)
}

// RunPlaybook mocks base method.
func (m *MockAnsibleInfrastructure) RunPlaybook(invPath, playbookPath string, sout, serror io.Writer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RunPlaybook", invPath, playbookPath, sout, serror)
	ret0, _ := ret[0].(error)
	return ret0
}

// RunPlaybook indicates an expected call of RunPlaybook.
func (mr *MockAnsibleInfrastructureMockRecorder) RunPlaybook(invPath, playbookPath, sout, serror any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunPlaybook", reflect.TypeOf((*MockAnsibleInfrastructure)(nil).RunPlaybook), invPath, playbookPath, sout, serror)
}

// SetWorkingDir mocks base method.
func (m *MockAnsibleInfrastructure) SetWorkingDir(workingDir string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetWorkingDir", workingDir)
}

// SetWorkingDir indicates an expected call of SetWorkingDir.
func (mr *MockAnsibleInfrastructureMockRecorder) SetWorkingDir(workingDir any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetWorkingDir", reflect.TypeOf((*MockAnsibleInfrastructure)(nil).SetWorkingDir), workingDir)
}
