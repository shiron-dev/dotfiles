// Code generated by MockGen. DO NOT EDIT.
// Source: internal/infrastructure/printout.go
//
// Generated by this command:
//
//	mockgen -source=internal/infrastructure/printout.go -destination=./gen/mock/infrastructure/printout.go HEAD
//

// Package mock_infrastructure is a generated GoMock package.
package mock_infrastructure

import (
	io "io"
	os "os"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockPrintOutInfrastructure is a mock of PrintOutInfrastructure interface.
type MockPrintOutInfrastructure struct {
	ctrl     *gomock.Controller
	recorder *MockPrintOutInfrastructureMockRecorder
	isgomock struct{}
}

// MockPrintOutInfrastructureMockRecorder is the mock recorder for MockPrintOutInfrastructure.
type MockPrintOutInfrastructureMockRecorder struct {
	mock *MockPrintOutInfrastructure
}

// NewMockPrintOutInfrastructure creates a new mock instance.
func NewMockPrintOutInfrastructure(ctrl *gomock.Controller) *MockPrintOutInfrastructure {
	mock := &MockPrintOutInfrastructure{ctrl: ctrl}
	mock.recorder = &MockPrintOutInfrastructureMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPrintOutInfrastructure) EXPECT() *MockPrintOutInfrastructureMockRecorder {
	return m.recorder
}

// GetError mocks base method.
func (m *MockPrintOutInfrastructure) GetError() *io.Writer {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetError")
	ret0, _ := ret[0].(*io.Writer)
	return ret0
}

// GetError indicates an expected call of GetError.
func (mr *MockPrintOutInfrastructureMockRecorder) GetError() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetError", reflect.TypeOf((*MockPrintOutInfrastructure)(nil).GetError))
}

// GetOut mocks base method.
func (m *MockPrintOutInfrastructure) GetOut() *io.Writer {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOut")
	ret0, _ := ret[0].(*io.Writer)
	return ret0
}

// GetOut indicates an expected call of GetOut.
func (mr *MockPrintOutInfrastructureMockRecorder) GetOut() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOut", reflect.TypeOf((*MockPrintOutInfrastructure)(nil).GetOut))
}

// Print mocks base method.
func (m *MockPrintOutInfrastructure) Print(str string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Print", str)
}

// Print indicates an expected call of Print.
func (mr *MockPrintOutInfrastructureMockRecorder) Print(str any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Print", reflect.TypeOf((*MockPrintOutInfrastructure)(nil).Print), str)
}

// SetLogOutput mocks base method.
func (m *MockPrintOutInfrastructure) SetLogOutput(logFile *os.File) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetLogOutput", logFile)
}

// SetLogOutput indicates an expected call of SetLogOutput.
func (mr *MockPrintOutInfrastructureMockRecorder) SetLogOutput(logFile any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetLogOutput", reflect.TypeOf((*MockPrintOutInfrastructure)(nil).SetLogOutput), logFile)
}
