// Code generated by MockGen. DO NOT EDIT.
// Source: internal/infrastructure/config.go
//
// Generated by this command:
//
//	mockgen -source=internal/infrastructure/config.go -destination=./gen/mock/infrastructure/config.go
//

// Package mock_infrastructure is a generated GoMock package.
package mock_infrastructure

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockConfigInfrastructure is a mock of ConfigInfrastructure interface.
type MockConfigInfrastructure struct {
	ctrl     *gomock.Controller
	recorder *MockConfigInfrastructureMockRecorder
	isgomock struct{}
}

// MockConfigInfrastructureMockRecorder is the mock recorder for MockConfigInfrastructure.
type MockConfigInfrastructureMockRecorder struct {
	mock *MockConfigInfrastructure
}

// NewMockConfigInfrastructure creates a new mock instance.
func NewMockConfigInfrastructure(ctrl *gomock.Controller) *MockConfigInfrastructure {
	mock := &MockConfigInfrastructure{ctrl: ctrl}
	mock.recorder = &MockConfigInfrastructureMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigInfrastructure) EXPECT() *MockConfigInfrastructureMockRecorder {
	return m.recorder
}

// GetArch mocks base method.
func (m *MockConfigInfrastructure) GetArch() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetArch")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetArch indicates an expected call of GetArch.
func (mr *MockConfigInfrastructureMockRecorder) GetArch() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetArch", reflect.TypeOf((*MockConfigInfrastructure)(nil).GetArch))
}

// GetOS mocks base method.
func (m *MockConfigInfrastructure) GetOS() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOS")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOS indicates an expected call of GetOS.
func (mr *MockConfigInfrastructureMockRecorder) GetOS() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOS", reflect.TypeOf((*MockConfigInfrastructure)(nil).GetOS))
}

// GetOSVersion mocks base method.
func (m *MockConfigInfrastructure) GetOSVersion() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOSVersion")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOSVersion indicates an expected call of GetOSVersion.
func (mr *MockConfigInfrastructureMockRecorder) GetOSVersion() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOSVersion", reflect.TypeOf((*MockConfigInfrastructure)(nil).GetOSVersion))
}
